name: Build & Publish Electron App

# Lance le workflow à chaque push d’un tag commençant par « v »
on:
  push:
    tags:
      - 'v*'     # ex. v5.0.0

permissions:
  contents: write   # nécessaire pour attacher les artéfacts à la release

jobs:
  build_windows:
    name: Build Windows (.exe)
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0          # indispensable pour que electron-builder voie les tags

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci        # ou pnpm install si vous utilisez pnpm

      - name: Build & publish (NSIS)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # token auto-généré par GitHub Actions
        run: |
          npm run build
          npx electron-builder --win --publish always

  build_macos:
    name: Build macOS (.dmg)
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build & publish (DMG)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'   # évite la recherche de certificat de signature
        run: |
          npm run build
          npx electron-builder --mac --publish always

# ————————————————————————————————
# Optionnel : ajouter la construction Linux (AppImage)
# ————————————————————————————————
#  build_linux:
#    name: Build Linux (AppImage)
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#          cache: 'npm'
#
#      - run: npm ci
#
#      - name: Build & publish (AppImage)
#        env:
#          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          npm run build
#          npx electron-builder --linux --publish always
